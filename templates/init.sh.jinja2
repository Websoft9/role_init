#!/bin/bash
new_password=$(pwgen -ncCs 10 1)

{% if init_db is not none %}
{% for db_names,dbs in init_db.items() %}
systemctl start {{db_names}}

{% if db_names == 'mysql' or db_names == 'mariadb' %}
sudo sh -c 'echo "init mysql&mariadb started at" $(date -d now)  1>> /tmp/init_debug.txt'
mysqladmin -u{{dbs.user}} -p{{dbs.password }} -h ::1 password $new_password
mysqladmin -u{{dbs.user}} -p{{dbs.password }} -h 127.0.0.1 password $new_password
mysqladmin -u{{dbs.user}} -p{{dbs.password }} -h localhost password $new_password
{% if init_application is not none %}
{%for app_name,app_attr in init_application.items() %}
{% if app_attr.database_user is not none %}
mysqladmin -u{{app_attr.database_user}} -p{{app_attr.database_password}} password $new_password
{% endif %}
{% endfor %}
{% endif %}
{% endif %}

{% if db_names == 'postgrepsql' %}
sudo sh -c 'echo "init postgrepsql started at" $(date -d now)  1>> /tmp/init_debug.txt'
echo "               
ALTER USER {{dbs.user}} WITH PASSWORD '$new_password';
" | sudo -u {{dbs.user}} psql
{% if init_application is not none %} 
{%for app_name,app_attr in init_application.items() %}
echo "               
ALTER USER {{app_attr.database_user}} WITH PASSWORD '$new_password';
" | sudo -u {{dbs.user}} psql
{% endfor %}
{% endif %}
{% endif %}

{% if db_names == 'mongodb' %}
sudo sh -c 'echo "init mongodb started at" $(date -d now)  1>> /tmp/init_debug.txt'
sleep 10
echo "
use admin
db.changeUserPassword('{{dbs.user}}', '$new_password')
" | mongo -u {{dbs.user}} -p {{dbs.password}}
{% if init_application is not none %}
{%for app_name,app_attr in init_application.items() %}
echo "
use admin
db.changeUserPassword('{{app_attr.database_user}}','$new_password')
" | mongo -u {{app_attr.database_user}} -p {{app_attr.database_password}}
{% endfor %}
{% endif %}
{% endif %}

{% if db_names == "docker" %}
sudo sh -c 'echo "init docker started at" $(date -d now)  1>> /tmp/init_debug.txt'
docker-compose -f {{dbs.path}} down -v
sed -i "s/{{dbs.password}}/$new_password/" {{dbs.path}}
docker-compose -f {{dbs.path}} up -d
{% endif %}

{% if init_db.docker is undefined %}
sed -i "s/{{dbs.password}}/$new_password/g" /credentials/password.txt
{% endif %}

{% if init_application is not none %}
{%for app_name,app_attr in init_application.items() %}
{% if app_attr.config_path is defined and app_attr.config_path is not none %}
{% for path in app_attr.config_path %}
sed -i "s/{{app_attr.database_password}}/$new_password/" {{path}}
{% endfor %}
{% endif %}
{% if app_attr.service is not none %}
systemctl restart {{app_attr.service}}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

{% if init_application is not none %}
{%for app_name,app_attr in init_application.items() %}
{% if (app_attr.random_password is defined) and  (app_attr.random_password_method is defined) %}
{% if app_attr.random_password  %}
{% for method in  app_attr.random_password_method %}
{{method}}
{% endfor %}

sed -i "s/{{ app_name }} Password: {{app_attr.default_password}}/{{ app_name }} Password: $new_password/" /credentials/password.txt
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
