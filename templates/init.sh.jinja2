#!/bin/bash
new_password=$(pwgen -ncCs 10 1)
{% if init_db is not none %}
{% for db_names,dbs in init_db.items() %}
systemctl start {{db_names}}
{% if db_names == 'mysql' or db_names == 'mariadb' %}
mysqladmin -u{{dbs.user}} -p{{dbs.password }} password $new_password
{% if application_database_user is not none %}
mysqladmin -u{{application_database_user}} -p{{application_database_password}} password $new_password
{% endif %}
{% endif %}
{% if db_names == 'postgrepsql' %}
echo "               
ALTER USER {{dbs.user}} WITH PASSWORD '$new_password';
" | sudo -u {{dbs.user}} psql
{% if init_application is not none %}
echo "               
ALTER USER {{application_database_user}} WITH PASSWORD '$new_password';
" | sudo -u {{dbs.user}} psql
{% endif %}
{% endif %}
{% if db_names == 'mongodb' %}
sleep 10
echo "
use admin
db.changeUserPassword('{{dbs.user}}','$new_password')
" | mongo -u {{dbs.user}} -p {{dbs.password}}
{% if init_application is not none %}
echo "
use admin
db.changeUserPassword('{{application_database_user}}','$new_password')
" | mongo -u {{dbs.user}} -p {{dbs.password}}
{% endif %}
{% endif %}
sed -i "s/{{dbs.password}}/$new_password/g" /credentials/password.txt
{% if application_config_path is not none %}
{% for path in application_config_path %}
sed -i "s/{{application_database_password}}/$new_password/" {{path}}
{% endfor %}
{% endif %}
{% if application_service is not none %}
systemctl restart {{application_service}}
{% endif %}
{% endfor %}
{% endif %}

{% if (application_random_password is not none) and  (application_random_password_method is not none) %}
{% if application_random_password  %}
{% for method in  application_random_password_method %}
{{method}}
{% endfor %}
sed -i "s/{{ application_name }} Password: {{application_default_password}}/{{ application_name }} Password: $new_password/" /credentials/password.txt
{% endif %}
{% endif %}

sed -i 's/\/root\/init.sh//g' /etc/rc.local
rm -rf /root/init.sh